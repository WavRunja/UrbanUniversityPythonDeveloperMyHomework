# module2hard.py

# Задание "Слишком древний шифр"

# Чтобы решить задачу по составлению нужного пароля для заданного числа n (от 3 до 20), нужно написать функцию, которая будет находить все пары чисел, сумма которых кратна n. Затем эти пары нужно объединить в одну строку для получения пароля.

# Алгоритм:

# Перебрать все возможные пары чисел от 1 до 20.
# Проверить, кратна ли сумма каждой пары числу n.
# Если да, добавить эту пару в результат.
# Объединить все подходящие пары в одну строку для получения пароля.

def get_password(n):
    # Функция get_password(n) создает пустой список pairs для хранения подходящих пар чисел.
    pairs = []
    # print (f"pairs = {pairs} n = {n}")
    # Перебирает все возможные пары чисел от 1 до 20 с помощью вложенных циклов for.
    for i in range(1, 21):
        for j in range(i + 1, 21):
            # print(f"i = {i} j = {j} n = {n}")
            # Проверяет, делится ли n на сумму текущей пары (i+j)(i+j) без остатка.
            if n % (i + j) == 0:
                # print (f" {n} % ({i} + {j}) == 0")
                # Если условие выполняется, добавляет пару в список pairs.
                pairs.append(f"{i}{j}")
                # print (f"Добавляет пару чисел {i}{j} в список pairs.")
                # print (f"Список с добавленной парой чисел: \npairs = {pairs}")

    # После проверки всех пар объединяет их в одну строку и возвращает как результат.
    # print (f".join({pairs})")
    result = ''.join(pairs)
    # print (f"result = {result}")
    return result

# Примеры использования:
# 9 - число из первой вставки
n1 = 9
# 11 - число из первой вставки
n2 = 11

# 1218273645 - нужный пароль (1 и 2, 1 и 8, 2 и 7, 3 и 6, 4 и 5 - пары; число 9 кратно сумме каждой пары)
result1 = get_password(n1)
# 11029384756 - нужный пароль (1 и 10, 2 и 9, 3 и 8, 4 и 7, 5 и 6 - пары; число 11 кратно сумме каждой пары)
result2 = get_password(n2)

print(f"{n1} - {result1}")
print(f"{n2} - {result2}")

# Вывод паролей для чисел от 3 до 20:
for n in range(3, 21):
    print(f"{n} - {get_password(n)}")

# Все пароли для чисел от 3 до 20 (для сверки):
# 3 - 12
# 4 - 13
# 5 - 1423
# 6 - 121524
# 7 - 162534
# 8 - 13172635
# 9 - 1218273645
# 10 - 141923283746
# 11 - 11029384756
# 12 - 12131511124210394857
# 13 - 112211310495867
# 14 - 1611325212343114105968
# 15 - 1214114232133124115106978
# 16 - 1317115262143531341251161079
# 17 - 11621531441351261171089
# 18 - 12151811724272163631545414513612711810
# 19 - 118217316415514613712811910
# 20 - 13141911923282183731746416515614713812911

# https://github.com/WavRunja/UrbanUniversityPythonDeveloperMyHomework